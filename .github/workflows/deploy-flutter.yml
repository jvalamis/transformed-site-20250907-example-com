name: Deploy Flutter App

on:
  push:
    branches: [main]
  workflow_dispatch:

# Disable GitHub Pages automatic deployment
# This workflow will handle everything

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Configure Flutter for web
        run: |
          # Convert repo name to valid Dart package name
          REPO_NAME="${{ github.event.repository.name }}"
          DART_NAME=$(echo "$REPO_NAME" | tr '-' '_' | tr '[:upper:]' '[:lower:]')
          echo "Converting '$REPO_NAME' to Dart package name: '$DART_NAME'"

          # Backup our custom files before flutter create overwrites them
          cp web/index.html web/index.html.backup
          if [ -f web/site-data.json ]; then
            cp web/site-data.json web/site-data.json.backup
          fi

          # Create Flutter project
          flutter create . --platforms web --project-name "$DART_NAME"

          # Restore our custom files
          cp web/index.html.backup web/index.html
          if [ -f web/site-data.json.backup ]; then
            cp web/site-data.json.backup web/site-data.json
          fi

          # Verify the placeholder is there
          grep -n 'base href="\$FLUTTER_BASE_HREF"' web/index.html || echo "ERROR: Base href placeholder not found!"

      - name: Build Flutter Web
        run: flutter build web --release --base-href /${{ github.event.repository.name }}/

      - name: Enable GitHub Pages (Actions source)
        run: |
          gh api repos/${{ github.repository }}/pages -X POST -f source[type]=workflow -f source[branch]=main || echo "Pages already enabled"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./build/web"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Wait for Pages & probe
        run: |
          PAGE_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          echo "Probing deployed site: $PAGE_URL"

          # Wait for Pages to be ready
          for i in {1..10}; do
            if curl -fsSL "$PAGE_URL/index.html" > /dev/null; then
              echo "✅ Pages deployment ready"
              break
            else
              echo "⏳ Waiting for Pages deployment... ($i/10)"
              sleep 5
            fi
          done

          # Probe critical files
          for file in \
            index.html \
            site-data.json \
            main.dart.js \
            flutter_bootstrap.js
          do
            if curl -fsSL "$PAGE_URL/$file" > /dev/null; then
              echo "✅ $file accessible"
            else
              echo "❌ $file not accessible"
              exit 1
            fi
          done

          echo "🎉 All critical files accessible"
